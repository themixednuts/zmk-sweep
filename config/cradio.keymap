// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define FN   3

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <75>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp SPACE>, <&kp SPACE>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp ENTER>, <&kp ENTER>;
        };
        key_repeat: key_repeat {
            compatible = "zmk,behavior-key-repeat";
            label = "KEY_REPEAT";
            #binding-cells = <0>;
            keys = <&trans>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_bspc {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };
        combo_delete {
            timeout-ms = <30>;
            key-positions = <28 29>;
            bindings = <&kp DELETE>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };
        
        // Shift keys
        combo_lshift {
            timeout-ms = <30>;
            key-positions = <20 21>;
            bindings = <&sk LSHIFT>;
        };
        combo_rshift {
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&sk RSHIFT>;
        };
        
        // Individual modifiers - left hand
        combo_lctrl {
            timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&sk LCTRL>;
        };
        combo_lalt {
            timeout-ms = <30>;
            key-positions = <12 13>;
            bindings = <&sk LALT>;
        };
        combo_lgui {
            timeout-ms = <30>;
            key-positions = <11 12>;
            bindings = <&sk LGUI>;
        };
        
        // Individual modifiers - right hand
        combo_rctrl {
            timeout-ms = <30>;
            key-positions = <18 19>;
            bindings = <&sk RCTRL>;
        };
        combo_ralt {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&sk RALT>;
        };
        combo_rgui {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&sk RGUI>;
        };
        
        // Modified modifiers - left side
        combo_ctrl_alt_l {
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&sk LC(LALT)>;
        };
        combo_ctrl_gui_l {
            timeout-ms = <50>;
            key-positions = <10 11 12>;
            bindings = <&sk LC(LGUI)>;
        };
        combo_alt_gui_l {
            timeout-ms = <50>;
            key-positions = <11 12 13>;
            bindings = <&sk LA(LGUI)>;
        };
        combo_meh_l {
            timeout-ms = <50>;
            key-positions = <10 20 12>;
            bindings = <&sk MEH>;
        };
        combo_hyper_l {
            timeout-ms = <50>;
            key-positions = <10 20 12 11>;
            bindings = <&sk HYPER>;
        };
        
        // Modified modifiers - right side
        combo_ctrl_alt_r {
            timeout-ms = <50>;
            key-positions = <16 17 18 19>;
            bindings = <&sk RC(RALT)>;
        };
        combo_ctrl_gui_r {
            timeout-ms = <50>;
            key-positions = <17 18 19>;
            bindings = <&sk RC(RGUI)>;
        };
        combo_alt_gui_r {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&sk RA(RGUI)>;
        };
        combo_meh_r {
            timeout-ms = <50>;
            key-positions = <19 27 17>;
            bindings = <&sk MEH>;
        };
        combo_hyper_r {
            timeout-ms = <50>;
            key-positions = <19 27 17 18>;
            bindings = <&sk HYPER>;
        };
        
        // Programming shortcuts
        combo_copy {
            timeout-ms = <30>;
            key-positions = <20 22>;
            bindings = <&kp LC(C)>;
        };
        combo_paste {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp LC(V)>;
        };
        combo_cut {
            timeout-ms = <30>;
            key-positions = <20 21 22>;
            bindings = <&kp LC(X)>;
        };
        combo_undo {
            timeout-ms = <30>;
            key-positions = <13 14>;
            bindings = <&kp LC(Z)>;
        };
        combo_save {
            timeout-ms = <30>;
            key-positions = <12 14>;
            bindings = <&kp LC(S)>;
        };
        combo_find {
            timeout-ms = <30>;
            key-positions = <11 13>;
            bindings = <&kp LC(F)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
        if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ; :      │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &sl NUM    &kp SPACE      &kp ENTER  &sl SYM
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };   

        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ HOME     │ PAGE UP  │  PAGE DN │  END     │ INSERT   │   │  - _     │ 7        │ 8        │ 9        │  \ |     │
            &kp HOME  &kp PAGE_UP &kp PG_DN  &kp END    &kp INS        &kp MINUS  &kp N7     &kp N8     &kp N9     &kp BSLH
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ LGUI     │  LALT    │  LCTRL   │  LSHIFT  │ TAB      │   │  = +     │ 4        │ 5        │ 6        │  ' "     │
            &sk LGUI   &sk LALT   &sk LCTRL  &sk LSHIFT &kp TAB        &kp EQUAL  &kp N4     &kp N5     &kp N6     &kp SQT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS     │          │          │ DELETE   │PRINTSCREEN│   │  ` ~     │ 1        │ 2        │ 3        │  .       │
           &caps_word  &key_repeat &trans     &kp DEL   &kp PRINTSCREEN &kp GRAVE  &kp N1     &kp N2     &kp N3     &kp DOT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &kp N0
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        sym_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  |       │  \       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp PIPE   &kp BSLH
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ~       │  -       │  (       │  {       │  [       │   │  ]       │  }       │  )       │  +       │  =       │
            &kp TILDE  &kp MINUS  &kp LPAR   &kp LBRC   &kp LBKT       &kp RBKT   &kp RBRC   &kp RPAR   &kp PLUS   &kp EQUAL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  `       │  _       │  <       │  HOME    │  END     │   │  PG_UP   │  PG_DN   │  >       │  LEFT    │  RIGHT   │
            &kp GRAVE  &kp UNDER  &kp LT     &kp HOME   &kp END        &kp PG_UP  &kp PG_DN  &kp GT     &kp LEFT   &kp RIGHT
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        fn_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │  F12     │  F7      │  F8      │  F9      │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &kp F12    &kp F7     &kp F8     &kp F9    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │  F11     │  F4      │  F5      │  F6      │BOOTLOADER│
           &bootloader &trans     &trans     &trans    &bt BT_SEL 1    &kp F11    &kp F4     &kp F5     &kp F6    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │  F10     │  F1      │  F2      │  F3      │ UP/DOWN  │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &kp F10    &kp F1     &kp F2     &kp F3    &kp DOWN        
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &kp UP
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };    
    };
};
